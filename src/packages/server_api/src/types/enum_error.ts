export enum ErrorMessages {
	AUTHORIZATION = 'Invalid Authorization',
	BANNED_EMAIL = 'Invalid email address domain',
	BLOCKED = 'You have been locked out - please contact support to unblock your account',
	ENDPOINT = 'Unknown endpoint',
	FILE_NOT_FOUND = 'File not found',
	FILE_SIZE = 'File size too large',
	INTERNAL = 'Internal server error',
	INVALID_DATA = 'Invalid user data',
	MALFORMED_JSON = 'Malformed JSON request',
	MEAL_EXISTS = 'Meal already exists on date provided',
	NO_EDITS = 'No edits made',
	NO_PHOTO = 'No photo uploaded',
	NOT_IMAGE = 'File uploaded is not an image',
	PARSER_ERROR='Parser error',
	PASSPORT_BLOCKED = 'passport: blocked',
	PASSPORT_INVALID_BACKUP = 'passport: backup invalid',
	PASSPORT_INVALID_TOKEN = 'passport: token invalid',
	PASSPORT_TOKEN = 'passport: token required',
	PASSPORT_TOKEN_BACKUP = 'passport: token or backup required',
	PASSWORD_EMAIL = 'New password cannot contain email address',
	PASSWORD_EMAIL_INVALID = 'Invalid email and/or password',
	PASSWORD_EMAIL_INVALID_TOKEN = 'Invalid password and/or Two Factor Authentication token',
	PASSWORD_RESET_INCORRECT = 'Password reset invalid',
	PASSWORD_RESET_INPROGRESS = 'Password reset in progress',
	PAYLOAD = 'Payload too large',
	PWNED_PASSWORD = 'The password provided is in a database of compromised passwords and should never be used',
	RABBITMQ_TIMEOUT='RabbitMQ rpc timeout',
	RATELIMIT = 'Rate-limited',
	SELF = 'Not allowed to perform on self',
	TOKEN_INVALID = 'Token invalid',
	TWO_FA_ALWAYS = 'Always required already enabled',
	TWO_FA_BACKUP = 'Backup codes already enabled',
	TWO_FA_CODE = 'The app-generated code provided is incorrect',
	TWO_FA_ENABLED = '2FA is already enabled',
	TWO_FA_NOT_ENABLED = '2FA is not enabled',
	TWO_FA_PROGRESS = '2FA setup already in progress',
	TWO_FA_SETUP = '2FA setup error',
	TYPE = 'TypeError',
	UNKNOWN_MEAL = 'Unknown meal',
	UNKNOWN_PERSON = 'Unknown Person',
	UNKNOWN_SESSION = 'Unknown session',
	USER_NOT_FOUND = 'User not found',
	VERIFICATION_INCORRECT = 'Incorrect verification data',
}