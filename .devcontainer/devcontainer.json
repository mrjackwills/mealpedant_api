// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.217.4/containers/rust
{
	"name": "Rust",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			// Use the VARIANT arg to pick a Debian OS version: buster, bullseye
			// Use bullseye when on local on arm64/Apple Silicon.
			"VARIANT": "bullseye"
		}
	},
	"runArgs": [
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined"
	],
	// RUN mkdir /dev/shm/photo_converted /dev/shm/photo_original && chown -R vscode:vscode /dev/shm
	"mounts": [
		"source=/dev/shm,target=/dev/shm,type=bind",
		"source=/etc/localtime,target=/etc/localtime,type=bind,readonly"
	],

	// "postCreateCommand": "cargo install cargo-watch",
	"postCreateCommand": "cargo install cargo-watch",
	// "postStartCommand": "mkdir /dev/shm/photo_original /dev/shm/photo_converted /dev/shm/backups && echo '2022-08-03T13:34:05.928256Z  INFO mealpedant::api: src/api/mod.rs:273: starting=starting server @ 127.0.0.1:8899' > /dev/shm/api.log",
	"postStartCommand": "mkdir /dev/shm/photo_original /dev/shm/photo_converted /dev/shm/backups && cargo install cargo-watch",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"lldb.executable": "/usr/bin/lldb",
		// VS Code don't watch files under ./target
		"files.watcherExclude": {
			"**/target/**": true
		},
		"rust-analyzer.checkOnSave.command": "clippy"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"vadimcn.vscode-lldb",
		"mutantdino.resourcemonitor",
		"rust-lang.rust-analyzer",
		"tamasfe.even-better-toml",
		"serayuzgur.crates",
		"christian-kohler.path-intellisense",
		"timonwong.shellcheck",
		"ms-vscode.live-server",
		"rangav.vscode-thunder-client",
		"bmuskalla.vscode-tldr"
	],


	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"features": {
		"docker-in-docker": "latest",
		"git": "os-provided"
	}
}